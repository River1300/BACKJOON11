/* ----- < 1단계 입출력과 사칙연산 > ----- */
//
//
//
//
//
/* --- < 10718 > --- */

/*
< 문제 >
	ACM-ICPC 인터넷 예선, Regional, 그리고 World Finals까지 이미 2회씩 진출해버린
	kriii는 미련을 버리지 못하고 왠지 모르게 올해에도 파주 World Finals 준비 캠프에 참여했다.
	대회를 뜰 줄 모르는 지박령 kriii를 위해서 격려의 문구를 출력해주자.

< 입력 >
	본 문제는 입력이 없다.

< 출력 >
	두 줄에 걸쳐 "강한친구 대한육군"을 한 줄에 한 번씩 출력한다.
*/

//#include <iostream>
//
//int main()
//{
//// 1. character output을 사용하여 문자를 출력한다.
//	std::cout << "강한친구 대한육군\n";
//
//// 다른 방법으로 wide character 타입을 이용하여 출력해 보자.
//// 1. 먼저 타입의 변수를 만들어서 초기화 시킨다.
//	wchar_t string[]{ L"강한친구 대한육군\n" };
//// 2. 유니코드 국가를 지정한다.
//	std::locale myLocale("kor");
//	std::wcout.imbue(myLocale);
//// 3. wide character output을 사용하여 변수를 출력한다.
//	std::wcout << string << '\n';
//}

/* --- < 10171 > --- */

/*
< 문제 >
	고양이 그리기

< 입력 >
	없음

< 출력 >
	고양이를 출력한다.
*/

//#include <iostream>
//
//int main()
//{
//// 1. 이스케이프 시퀀스를 문자 그대로 출력하기 위해 백슬레쉬를 앞에 붙여준다.
//	std::cout << "\\    /\\ \n )  ( \')\n(  /  )\n \\(__)|";
//}

/* --- < 1008 > --- */

/*
< 문제 >
	두 정수 A와 B를 입력받은 다음, A/B를 출력하는 프로그램을 작성하시오.

< 입력 >
	첫째 줄에 A와 B가 주어진다.	( 0 < A, B < 10 )

< 출력 >
	첫째 줄에 A/B를 출력한다. 실제 정답과 출력값의 절대오차 또는 상대 오차가 10에 -9승 이하이면 정답이다.
*/

//#include <iostream>
//
//int main()
//{
//// 1. 실수형 변수 A, B를 만든다.
//	double A, B;
//// 2. 사용자로부터 실수형 변수 A, B의 값을 입력받는다.
//	std::cin >> A >> B;
//// 3. 실수로 표현된 소수점 단위를 미리 지정해 둔다.
//	std::cout.precision(10);
//	std::cout << A / B << '\n';
//
//// precision이 다른 타입의 변수에도 적용되는지 확인해 보자.
//// 1. int, float 타입의 변수를 만든다.
//	int C{ 10 }, D{ 3 };
//	float E{ 1.1f }, F{ 0.3f };
//// 2. 각각 나누어 본다.
//	std::cout.precision(10);
//	std::cout << C / D << '\n' << E / F << '\n';
//}

/* --- < 10926 > --- */

/*
< 문제 >
	준하는 사이트에 회원가입을 하다가 joonas라는 아이디가 이미 존재하는 것을 보고 놀랐다.
	준하는 놀람을 ??!로 표현한다.
	준하가 가입하려고 하는 사이트에 이미 존재하는 아이디가 주어졌을 때,
	놀람을 표현하는 프로그램을 작성하시오.

< 입력 >
	첫째 줄에 준하가 가입하려고 하는 사이트에 이미 존재하는 아이디가 주어진다.
	아이디는 알파벳 소문자로만 이루어져 있으며, 길이는 50자를 넘지 않는다.

< 출력 >
	첫째 줄에 준하의 놀람을 출력한다. 놀람은 아이디 뒤에 ??!를 붙여서 나타낸다.
*/

//#include <iostream>
//
//int main()
//{
//// 1. 이미 회원가입되어 있는 아이디를 변수로 지정해 둔다.
//	std::string aName{ "myName" };
//// 2. 사용자로부터 입력받을 아이디 변수를 만든다.
//	std::string bName;
//	std::cin >> bName;
//
//	if (bName == aName)
//		std::cout << bName << "??!\n";
//
//// 비밀번호를 입력할 때 2차 입력에서 동일할 때까지 반복되는 코드를 입력해 보자.
//// 1. 먼저 비밀번호 변수를 만든다.
//	int a, b;
//// 2. 1차 비밀번호를 입력받는다.
//	std::cin >> a;
//// 3. 2차 비밀번호를 반목분을 통해 입력받는다.
//	while (std::cin >> b)
//	{
//// 4. 매번 입력받을 때마다 1차 비밀번호와 비교한다.
//		if (a == b) { break; }
//		std::cout << "Not Collect!\n";
//	}
//}

/* --- < 2588 > --- */

/*
< 문제 >
	(세 자리 수) × (세 자리 수)는 다음과 같은 과정을 통하여 이루어진다.
	(1)과 (2)위치에 들어갈 세 자리 자연수가 주어질 때
	(3), (4), (5), (6)위치에 들어갈 값을 구하는 프로그램을 작성하시오.

< 입력 >
	첫째 줄에 (1)의 위치에 들어갈 세 자리 자연수가,
	둘째 줄에 (2)의 위치에 들어갈 세자리 자연수가 주어진다.

< 출력 >
	첫째 줄부터 넷째 줄까지 차례대로 (3), (4), (5), (6)에 들어갈 값을 출력한다.
*/

//#include <iostream>
//
//int main()
//{
//// 1. 세자리 숫자를 저장할 변수 두개를 만들어 초기화 한다.
//	int num1{ 123 }, num2{ 456 };
//// 2. 계산식을 표현하기 위해 먼저 두 수를 차례로 출력한다.
//	std::cout << num1 << '\n' << num2 << '\n';
//// 3. 셋째짜리 숫자와의 계산 결과를 출력한다.
//	std::cout << num1 * (num2 % 10) << '\n';
//// 4. 둘째짜리 숫자와의 계산 결과를 출력한다.
//	std::cout << num1 * ((num2 / 10) % 10) << '\n';
//// 5. 첫째짜리 숫자와의 계산 결과를 출력한다.
//	std::cout << num1 * (num2 / 100) << '\n';
//
//	std::cout << num1 * num2 << '\n';
//}